{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Header","_ref","siteTitle","siteDescription","is_mobile","window","innerWidth","react_default","style","textAlign","margin","marginBottom","fontSize","gatsby_browser_entry","to","color","defaultProps","Layout","Fragment","header","site","siteMetadata","description","maxWidth","marginTop","Date","getFullYear","borderBottom","href","_2328579951","node","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-147bd8110f7454c41b07.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle, siteDescription }) => {\n  var is_mobile = false\n  if (typeof window !== 'undefined') {\n    is_mobile = window.innerWidth <= 700\n  }\n\n  return (\n    <header style={{\n      textAlign: 'center',\n      margin: is_mobile ? '48px 16px' : '48px 16px 72px 16px',\n    }}>\n      <h1 style={{ marginBottom: '8px', fontSize: '3rem' }}>\n        <Link to=\"/\" >{siteTitle}</Link>\n      </h1>\n      <p style={{\n        fontSize: '1.3rem',\n        color: '#eeeeee',\n      }}>{siteDescription}</p>\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: '',\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header\n          siteTitle={data.site.siteMetadata.title}\n          siteDescription={data.site.siteMetadata.description}\n        />\n          <div style={{ maxWidth: 1300, margin: '0 auto' }}>\n            <main>{children}</main>\n            <footer style={{\n              marginTop: '100px',\n              marginBottom: '32px',\n              color: 'white',\n              fontSize: '.8rem',\n              textAlign: 'center',\n            }}>\n              © {new Date().getFullYear()}, Built by\n              {` `}\n              <a style={{ borderBottom: '1px dotted #616161' }} href=\"https://twitter.com/ashleemboyer\">Ashlee</a> with\n              {` `}\n              <a style={{ borderBottom: '1px dotted #616161' }} href=\"https://www.gatsbyjs.org\">Gatsby</a>\n            </footer>\n          </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}