{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/seo.js"],"names":["Index","props","_this","_Component","call","this","state","width","componentWillMount","setState","window","innerWidth","render","is_mobile","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","gatsby__WEBPACK_IMPORTED_MODULE_7__","query","data","_components_layout__WEBPACK_IMPORTED_MODULE_5__","_components_seo__WEBPACK_IMPORTED_MODULE_6__","title","keywords","style","textAlign","allSitePage","edges","filter","_ref","node","context","name","map","_ref2","index","key","position","height","display","margin","to","path","_components_image__WEBPACK_IMPORTED_MODULE_8__","borderRadius","src","replace","lineHeight","verticalAlign","color","backgroundColor","onMouseEnter","e","target","opacity","onMouseLeave","top","right","bottom","left","_public_static_d_623392454_json__WEBPACK_IMPORTED_MODULE_3__","Component","defaultProps","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","propTypes","PropTypes","string","arrayOf","object","isRequired"],"mappings":"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","file":"component---src-pages-index-js-77e00640cc86db8f665d.js","sourcesContent":["import React, { Component } from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Link, StaticQuery, graphql } from \"gatsby\";\nimport Image from \"../components/image\"\n\nexport default class Index extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { width: props.width }\n  }\n\n  componentWillMount() {\n    this.setState({ width: window.innerWidth })\n  }\n\n  render() {\n    const is_mobile = this.state.width < 700;\n    return (\n      <StaticQuery\n        query={graphql`\n          query {\n            allSitePage {\n              edges {\n                node {\n                  path\n                  context {\n                    name\n                    birth\n                    death\n                    about\n                    link\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={data => (\n          <Layout>\n            <SEO title=\"Home\" keywords={['gatsby', 'application', 'react', 'birthdays', 'black', 'history', 'month']} />\n            <div style={{ textAlign: 'center' }}>\n              {\n                data.allSitePage.edges.filter(({ node }) => {\n                  return !!(node && node.context && node.context.name)\n                }).map(({ node }, index) => {\n                  return (\n                    <div\n                      key={index}\n                      style={{\n                        position: 'relative',\n                        width: is_mobile ? '90%' : '272px',\n                        height: (272 + 32) + 'px',\n                        display: 'inline-block',\n                        margin: '8px'\n                      }}\n                    >\n                      <Link to={node.path}>\n                        <Image\n                          style={{\n                            width: '100%',\n                            height: '272px',\n                            borderRadius: '2px 2px 0 0',\n                          }}\n                          src={node.context.name.replace(/ |\\./g, '') + '.jpg'}\n                        />\n                        <p style={{\n                          height: '32px',\n                          lineHeight: '32px',\n                          verticalAlign: 'middle',\n                          textAlign: 'center',\n                          color: 'white',\n                          backgroundColor: '#212121',\n                          borderRadius: '0 0 2px 2px',\n                        }}\n                        >\n                          {node.context.name}\n                        </p>\n                        <div\n                          onMouseEnter={(e) => e.target.style.opacity = '0.2'}\n                          onMouseLeave={(e) => e.target.style.opacity = '0'}\n                          style={{\n                            backgroundColor: 'lavenderblush',\n                            opacity: '0',\n                            position: 'absolute',\n                            top: 0,\n                            right: 0,\n                            bottom: 0,\n                            left: 0,\n                          }}\n                        ></div>\n                      </Link>\n                    </div>\n                  )\n                })\n              }\n            </div>\n          </Layout>\n        )}\n      />\n    )\n  }\n}\n\nIndex.defaultProps = {\n  width: 1000\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}